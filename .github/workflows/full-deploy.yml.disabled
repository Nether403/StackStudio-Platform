name: Full Deploy & Sync

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Database/**/*.json'
      - 'API/**/*'
      - 'Engine/**/*'
      - 'Frontend/**/*'
      - 'pages/**/*'
      - 'components/**/*'
      - 'lib/**/*'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

jobs:
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript type check
      run: npm run type-check
    
    - name: Build application
      run: npm run build
      env:
        # Mock environment variables for build testing
        NEXTAUTH_URL: https://example.com
        NEXTAUTH_SECRET: mock-secret
        GITHUB_ID: mock-github-id
        GITHUB_SECRET: mock-github-secret
        NEXT_PUBLIC_FIREBASE_API_KEY: mock-api-key
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: mock-domain
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: mock-project
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: mock-bucket
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: mock-sender
        NEXT_PUBLIC_FIREBASE_APP_ID: mock-app-id
        FIREBASE_PROJECT_ID: mock-project
        FIREBASE_CLIENT_EMAIL: mock-email
        FIREBASE_PRIVATE_KEY: mock-key

  sync-database:
    name: Sync Database to Firestore
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Sync Firestore Database
      run: npm run sync-db
      env:
        GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    
    - name: Verify database sync
      run: |
        echo "Database sync completed successfully"
        echo "Collections updated:"
        echo "- ai_models_and_apis"
        echo "- authentication_services" 
        echo "- backend_frameworks"
        echo "- cloud_platforms"
        echo "- coding_tools"
        echo "- css_frameworks"
        echo "- databases"
        echo "- deployment_platforms"
        echo "- frontend_frameworks"
        echo "- monitoring_analytics"

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [test-and-build, sync-database]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

  deploy-firebase:
    name: Deploy to Firebase Hosting
    runs-on: ubuntu-latest
    needs: [test-and-build, sync-database]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for static export
      run: npm run build
      env:
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        GITHUB_ID: ${{ secrets.GITHUB_ID }}
        GITHUB_SECRET: ${{ secrets.GITHUB_SECRET }}
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
    
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: '${{ secrets.GOOGLE_CLOUD_PROJECT }}'
        channelId: live 